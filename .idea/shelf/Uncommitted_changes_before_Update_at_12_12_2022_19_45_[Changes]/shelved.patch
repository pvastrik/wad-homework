Index: homework-node/database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Pool = require('pg').Pool;\r\nconst pool = new Pool({\r\n    user: \"postgres\",\r\n    password: \"postgres\",\r\n    database: \"testwad\",\r\n    host: \"localhost\",\r\n    port: \"5432\"\r\n});\r\n\r\nconst execute = async(query) => {\r\n    try {\r\n        await pool.connect(); // gets connection\r\n        await pool.query(query); // sends queries\r\n        return true;\r\n    } catch (error) {\r\n        console.error(error.stack);\r\n        return false;\r\n    }\r\n}\r\n\r\nconst createPostTblQuery = `\r\n    CREATE TABLE IF NOT EXISTS \"posts\" (\r\n\t    \"id\" SERIAL PRIMARY KEY,         \r\n\t    \"date\" DATE NOT NULL DEFAULT CURRENT_DATE,\r\n\t    \"body\" VARCHAR(200) NOT NULL,\r\n        \"userid\" SERIAL NOT NULL\r\n    );`;\r\n\r\nconst createUserTblQuery = `\r\n    CREATE TABLE IF NOT EXISTS \"users\" (\r\n\t    \"id\" SERIAL PRIMARY KEY,         \r\n\t    \"name\" VARCHAR(200) NOT NULL,\r\n\t    \"password\" VARCHAR(200) NOT NULL,\r\n        \"email\" VARCHAR(200)  NOT NULL UNIQUE\r\n    );`;\r\n// A function to execute the previous query\r\nexecute(createPostTblQuery).then(result => {\r\n    if (result) {\r\n        console.log('created the \"posts\" table');\r\n    }\r\n\r\n});\r\n\r\n// A function to execute the previous query\r\nexecute(createUserTblQuery).then(result => {\r\n    if (result) {\r\n        console.log('created the \"users\" table');\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = pool;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-node/database.js b/homework-node/database.js
--- a/homework-node/database.js	(revision a366c939ee090f10d8111f919b2a41c5279ad86b)
+++ b/homework-node/database.js	(date 1670863640879)
@@ -1,7 +1,7 @@
 const Pool = require('pg').Pool;
 const pool = new Pool({
     user: "postgres",
-    password: "postgres",
+    password: "UmmiTiiger20",
     database: "testwad",
     host: "localhost",
     port: "5432"
Index: homework-vue/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># wad-homework\r\n\r\n## Project setup\r\n```\r\nnpm install\r\n```\r\n\r\n### Compiles and hot-reloads for development\r\n```\r\nnpm run serve\r\n```\r\n\r\n### Compiles and minifies for production\r\n```\r\nnpm run build\r\n```\r\n\r\n### Lints and fixes files\r\n```\r\nnpm run lint\r\n```\r\n\r\n### Customize configuration\r\nSee [Configuration Reference](https://cli.vuejs.org/config/).\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-vue/README.md b/homework-vue/README.md
--- a/homework-vue/README.md	(revision a366c939ee090f10d8111f919b2a41c5279ad86b)
+++ b/homework-vue/README.md	(date 1670863628324)
@@ -1,4 +1,4 @@
-# wad-homework
+npm# wad-homework
 
 ## Project setup
 ```
Index: homework-vue/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-vue/package-lock.json b/homework-vue/package-lock.json
--- a/homework-vue/package-lock.json	(revision a366c939ee090f10d8111f919b2a41c5279ad86b)
+++ b/homework-vue/package-lock.json	(date 1670863628487)
@@ -4406,6 +4406,65 @@
         "yarn": ">=1"
       }
     },
+    "node_modules/cross-env/node_modules/cross-spawn": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+      "dev": true,
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/cross-env/node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.3",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
@@ -14804,6 +14863,49 @@
       "dev": true,
       "requires": {
         "cross-spawn": "^7.0.1"
+      },
+      "dependencies": {
+        "cross-spawn": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+          "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+          "dev": true,
+          "requires": {
+            "path-key": "^3.1.0",
+            "shebang-command": "^2.0.0",
+            "which": "^2.0.1"
+          }
+        },
+        "path-key": {
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+          "dev": true
+        },
+        "shebang-command": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+          "dev": true,
+          "requires": {
+            "shebang-regex": "^3.0.0"
+          }
+        },
+        "shebang-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+          "dev": true
+        },
+        "which": {
+          "version": "2.0.2",
+          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+          "dev": true,
+          "requires": {
+            "isexe": "^2.0.0"
+          }
+        }
       }
     },
     "cross-spawn": {
