Index: homework-node/database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Pool = require('pg').Pool;\r\nconst pool = new Pool({\r\n    user: \"postgres\",\r\n    password: \"veebirakendused\",\r\n    database: \"testwad\",\r\n    host: \"localhost\",\r\n    port: \"5432\"\r\n});\r\n\r\nconst execute = async(query) => {\r\n    try {\r\n        await pool.connect(); // gets connection\r\n        await pool.query(query); // sends queries\r\n        return true;\r\n    } catch (error) {\r\n        console.error(error.stack);\r\n        return false;\r\n    }\r\n}\r\n\r\nconst createPostTblQuery = `\r\n    CREATE TABLE IF NOT EXISTS \"posts\" (\r\n\t    \"id\" SERIAL PRIMARY KEY,         \r\n\t    \"title\" VARCHAR(200) NOT NULL,\r\n\t    \"body\" VARCHAR(200) NOT NULL,\r\n        \"urllink\" VARCHAR(200)  \r\n    );`;\r\n\r\nconst createUserTblQuery = `\r\n    CREATE TABLE IF NOT EXISTS \"users\" (\r\n\t    \"id\" SERIAL PRIMARY KEY,         \r\n\t    \"name\" VARCHAR(200) NOT NULL,\r\n\t    \"password\" VARCHAR(200) NOT NULL,\r\n        \"email\" VARCHAR(200)  NOT NULL\r\n    );`;\r\n// A function to execute the previous query\r\nexecute(createPostTblQuery).then(result => {\r\n    if (result) {\r\n        console.log('created the \"posts\" table');\r\n    }\r\n\r\n});\r\n\r\n// A function to execute the previous query\r\nexecute(createUserTblQuery).then(result => {\r\n    if (result) {\r\n        console.log('created the \"users\" table');\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = pool;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-node/database.js b/homework-node/database.js
--- a/homework-node/database.js	(revision c2f66096e39bb388bee2d9343a2307ef1570dc63)
+++ b/homework-node/database.js	(date 1670516141242)
@@ -1,7 +1,7 @@
 const Pool = require('pg').Pool;
 const pool = new Pool({
     user: "postgres",
-    password: "veebirakendused",
+    password: "UmmiTiiger20",
     database: "testwad",
     host: "localhost",
     port: "5432"
@@ -31,7 +31,7 @@
 	    "id" SERIAL PRIMARY KEY,         
 	    "name" VARCHAR(200) NOT NULL,
 	    "password" VARCHAR(200) NOT NULL,
-        "email" VARCHAR(200)  NOT NULL
+        "email" VARCHAR(200) UNIQUE NOT NULL
     );`;
 // A function to execute the previous query
 execute(createPostTblQuery).then(result => {
Index: homework-vue/src/components/SignupCompo.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"container\">\r\n    <div class=\"item\">\r\n      <h2 class=\"textformating2\">Welcome to PostIt!</h2>\r\n      <h2 class=\"textformating2\">Please sign up</h2>\r\n      <br>\r\n      <form @submit.stop.prevent=\"signUp\">\r\n        <h2 class=\"textformating2\">Username</h2>\r\n        <input id=username placeholder=\"Username\" v-model=\"username\">\r\n        <h2 class=\"textformating2\">Email</h2>\r\n        <input id=email type=\"email\" placeholder=\"Email\" v-model=\"email\">\r\n        <br>\r\n        <h2 class=\"textformating2\">Password</h2>\r\n        <input v-model=\"password.password\" id=\"password\" type=\"password\" placeholder=\"Password\">\r\n        <br>\r\n        <input v-model=\"password.confirm\" id=\"confirm\" type=\"password\" placeholder=\"Confirm password\">\r\n        <div v-if=\"validationError\" class=\"error\">\r\n          <pre class=\"error\">{{validationError}}</pre>\r\n        </div>\r\n        <input id=\"buttonInput\" type=\"submit\"/>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n//import { required, minLength, maxLength} from 'vuelidate/lib/validators';\r\nimport useValidate from '@vuelidate/core'\r\nimport {required, email, minLength, maxLength, sameAs} from '@vuelidate/validators'\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      v$: useValidate(),\r\n      username: \"\",\r\n      email: \"\",\r\n      password: {\r\n        password: \"\",\r\n        confirm: \"\",\r\n      },\r\n      validationError: \"\",\r\n    }\r\n  },\r\n  methods: {\r\n    signUp() {\r\n\r\n      this.v$.$validate();\r\n      console.log(this.v$)\r\n      if (!this.v$.$error) {\r\n        var data = {\r\n          name: this.username,\r\n          email: this.email,\r\n          password: this.password.password\r\n        }\r\n        console.log(data);\r\n        fetch(\"http://localhost:3000/auth/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(data)\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n              router.push(\"home\");\r\n            })\r\n            .catch((e) => {\r\n              this.validationError = \"Email is already in use.\";\r\n              console.log(e);\r\n              console.log(\"error\");\r\n            })\r\n      } else {\r\n        this.validationError = \"\";\r\n        for (let error of  this.v$.$errors) {\r\n          if (error.$validator===\"sameAs\") this.validationError += \"Passwords must be same!\\n\"\r\n          if (error.$validator===\"minLength\") this.validationError += \"Password must be at least 8 characters!\\n\"\r\n          if (error.$validator===\"maxLength\") this.validationError += \"Password must be at most 15 characters!\\n\"\r\n          if (error.$validator===\"valid\") this.validationError += \"Password must contain the following:\\n\" +\r\n              \"\\t2 lowercase\\n\\tsymbol '_'\\n\\t1 number\\n\\tstart with uppercase letter\\n\"\r\n        }\r\n\r\n      }\r\n    },\r\n  },\r\n  validations() {\r\n    return {\r\n      username: {required},\r\n      email: {required, email},\r\n      password: {\r\n        password: {\r\n          required,\r\n          minLength: minLength(8),\r\n          maxLength: maxLength(15),\r\n          valid: function (value) {\r\n            const containsUpper = /[A-Z]/.test(value);\r\n            const contains2Lower = /[a-z].*[a-z]/.test(value);\r\n            const containsNumber = /[0-9]/.test(value);\r\n            const containsSpecial = /_/.test(value);\r\n            const startsWithUpper = /[A-Z]/.test(value.substring(0, 1));\r\n            return (containsSpecial && startsWithUpper && containsUpper\r\n                && containsNumber && contains2Lower);\r\n          },\r\n        },\r\n        confirm: {required, sameAs: sameAs(this.password.password)},\r\n      },\r\n      validationError: {}\r\n    }\r\n  }\r\n}\r\n//   validations: {\r\n//       user: {\r\n//         password: {\r\n//           required: required,\r\n//           valid: function (value) {\r\n//             const contains2Upper = /[A-Z].*[A-Z]/.test(value);\r\n//             const containsLower =  /[a-z]/.test(value);\r\n//             const containsNumber = /[0-9]/.test(value);\r\n//             const containsSpecial = /[_]/.test(value);\r\n//             const startsWithUpper = /[A-Z]/.test(value.substring(0, 1));\r\n//             return (containsSpecial && startsWithUpper && contains2Upper\r\n//                 && containsNumber && containsLower);\r\n//           },\r\n//           minLength: minLength(8),\r\n//           maxLength: maxLength(15),\r\n//         }\r\n//       }\r\n//     },\r\n//   computed: {\r\n//     isDisabled() {\r\n//       return this.$v.$invalid;\r\n//     }\r\n//   },\r\n//   created() {\r\n//     this.submitted = true;\r\n//     return this.$v.$touch();\r\n//   }\r\n//\r\n// }\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.error {\r\n  margin: 1em 0 1em 0;\r\n  width: 15em;\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: smaller;\r\n  font-family: inherit;\r\n  text-align:left;\r\n}\r\n.container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n\r\n.item {\r\n  order: inherit;\r\n  background-color: #ffd2fc;\r\n  margin: 4em;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1em;\r\n  border-radius: 20px;\r\n}\r\n\r\n#buttonInput {\r\n  width:50%;\r\n}\r\n.textformating1 {\r\n  color: #1ccad8;\r\n  font-size: 1em;\r\n  text-align: center;\r\n\r\n}\r\n\r\n.textformating2 {\r\n  font-size: 1em;\r\n  text-align: center;\r\n}\r\n\r\n\r\n</style>\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-vue/src/components/SignupCompo.vue b/homework-vue/src/components/SignupCompo.vue
--- a/homework-vue/src/components/SignupCompo.vue	(revision c2f66096e39bb388bee2d9343a2307ef1570dc63)
+++ b/homework-vue/src/components/SignupCompo.vue	(date 1670516141278)
@@ -113,35 +113,7 @@
     }
   }
 }
-//   validations: {
-//       user: {
-//         password: {
-//           required: required,
-//           valid: function (value) {
-//             const contains2Upper = /[A-Z].*[A-Z]/.test(value);
-//             const containsLower =  /[a-z]/.test(value);
-//             const containsNumber = /[0-9]/.test(value);
-//             const containsSpecial = /[_]/.test(value);
-//             const startsWithUpper = /[A-Z]/.test(value.substring(0, 1));
-//             return (containsSpecial && startsWithUpper && contains2Upper
-//                 && containsNumber && containsLower);
-//           },
-//           minLength: minLength(8),
-//           maxLength: maxLength(15),
-//         }
-//       }
-//     },
-//   computed: {
-//     isDisabled() {
-//       return this.$v.$invalid;
-//     }
-//   },
-//   created() {
-//     this.submitted = true;
-//     return this.$v.$touch();
-//   }
-//
-// }
+
 </script>
 
 
Index: homework-vue/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/homework-vue/package-lock.json b/homework-vue/package-lock.json
--- a/homework-vue/package-lock.json	(revision c2f66096e39bb388bee2d9343a2307ef1570dc63)
+++ b/homework-vue/package-lock.json	(date 1670516141472)
@@ -4405,6 +4405,83 @@
         "yarn": ">=1"
       }
     },
+    "node_modules/cross-env": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz",
+      "integrity": "sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==",
+      "dev": true,
+      "dependencies": {
+        "cross-spawn": "^7.0.1"
+      },
+      "bin": {
+        "cross-env": "src/bin/cross-env.js",
+        "cross-env-shell": "src/bin/cross-env-shell.js"
+      },
+      "engines": {
+        "node": ">=10.14",
+        "npm": ">=6",
+        "yarn": ">=1"
+      }
+    },
+    "node_modules/cross-env/node_modules/cross-spawn": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+      "dev": true,
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/cross-env/node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cross-env/node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.3",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
@@ -14778,6 +14855,58 @@
         "cross-spawn": "^7.0.1"
       }
     },
+    "cross-env": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz",
+      "integrity": "sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==",
+      "dev": true,
+      "requires": {
+        "cross-spawn": "^7.0.1"
+      },
+      "dependencies": {
+        "cross-spawn": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+          "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+          "dev": true,
+          "requires": {
+            "path-key": "^3.1.0",
+            "shebang-command": "^2.0.0",
+            "which": "^2.0.1"
+          }
+        },
+        "path-key": {
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+          "dev": true
+        },
+        "shebang-command": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+          "dev": true,
+          "requires": {
+            "shebang-regex": "^3.0.0"
+          }
+        },
+        "shebang-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+          "dev": true
+        },
+        "which": {
+          "version": "2.0.2",
+          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+          "dev": true,
+          "requires": {
+            "isexe": "^2.0.0"
+          }
+        }
+      }
+    },
     "cross-spawn": {
       "version": "7.0.3",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
